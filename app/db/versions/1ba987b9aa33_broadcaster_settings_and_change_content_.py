"""broadcaster settings and change content queue to be on broadcasters

Revision ID: 1ba987b9aa33
Revises: 928e5eff03f8
Create Date: 2025-05-30 20:49:16.451581

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_file
import sqlalchemy_utils
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1ba987b9aa33'
down_revision: Union[str, None] = '928e5eff03f8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('broadcaster_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('broadcaster_id', sa.Integer(), nullable=False),
    sa.Column('linked_discord_channel_id', sa.BigInteger(), nullable=True),
    sa.Column('linked_discord_channel_verified', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['broadcaster_id'], ['broadcaster.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('content', 'stripped_url',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.Text(),
               existing_nullable=False)
    op.execute("DELETE FROM content_queue_submissions")
    op.execute("DELETE FROM content_queue")
    op.execute("DELETE FROM external_users")
    submission_source_enum = postgresql.ENUM('Discord', 'Twitch', name='contentqueuesubmissionsource')
    submission_source_enum.create(op.get_bind())
    op.add_column('content_queue', sa.Column('broadcaster_id', sa.Integer(), nullable=False))
    op.drop_constraint('uq_channel_content', 'content_queue', type_='unique')
    op.create_unique_constraint('uq_broadcaster_content', 'content_queue', ['broadcaster_id', 'content_id'])
    op.drop_constraint('content_queue_channel_id_fkey', 'content_queue', type_='foreignkey')
    op.create_foreign_key('content_queue_broadcaster_id_fkey', 'content_queue', 'broadcaster', ['broadcaster_id'], ['id'])
    op.drop_column('content_queue', 'submitted_at')
    op.drop_column('content_queue', 'channel_id')
    op.add_column('content_queue_submissions', sa.Column('submission_source_type', submission_source_enum, nullable=False))
    op.add_column('content_queue_submissions', sa.Column('submission_source_id', sa.BigInteger(), nullable=False))
    op.add_column('content_queue_submissions', sa.Column('weight', sa.Float(), nullable=False))
    op.add_column('external_users', sa.Column('ignore_weight_penalty', sa.Boolean(), nullable=False))
    op.alter_column('external_users', 'external_account_id',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.BigInteger(),
               postgresql_using="external_account_id::bigint",
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('external_users', 'external_account_id',
               existing_type=sa.BigInteger(),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
    op.drop_column('external_users', 'ignore_weight_penalty')
    op.drop_column('content_queue_submissions', 'weight')
    op.drop_column('content_queue_submissions', 'submission_source_id')
    op.drop_column('content_queue_submissions', 'submission_source_type')
    submission_source_enum = postgresql.ENUM('Discord', 'Twitch', name='contentqueuesubmissionsource')
    submission_source_enum.drop(op.get_bind())
    op.add_column('content_queue', sa.Column('channel_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('content_queue', sa.Column('submitted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_constraint('content_queue_broadcaster_id_fkey', 'content_queue', type_='foreignkey')
    op.create_foreign_key('content_queue_channel_id_fkey', 'content_queue', 'channels', ['channel_id'], ['id'])
    op.drop_constraint('uq_broadcaster_content', 'content_queue', type_='unique')
    op.create_unique_constraint('uq_channel_content', 'content_queue', ['channel_id', 'content_id'])
    op.drop_column('content_queue', 'broadcaster_id')
    op.alter_column('content', 'stripped_url',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=1000),
               existing_nullable=False)
    op.drop_table('broadcaster_settings')
    # ### end Alembic commands ###
