"""$@

Revision ID: ad68a1448763
Revises: dac5aa82b7dd
Create Date: 2025-08-19 20:57:34.021158

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_file
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision: str = 'ad68a1448763'
down_revision: Union[str, None] = 'dac5aa82b7dd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('moderation_actions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('target_user_id', sa.Integer(), nullable=False),
    sa.Column('action_type', sa.String(length=50), nullable=False),
    sa.Column('scope', sa.String(length=50), nullable=False),
    sa.Column('channel_id', sa.Integer(), nullable=True),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('issued_by', sa.Integer(), nullable=False),
    sa.Column('issued_at', sa.DateTime(), server_default='now()', nullable=False),
    sa.Column('active', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('revoked_at', sa.DateTime(), nullable=True),
    sa.Column('revoked_by', sa.Integer(), nullable=True),
    sa.Column('revoked_reason', sa.Text(), nullable=True),
    sa.CheckConstraint("(scope = 'global' AND channel_id IS NULL) OR (scope = 'channel' AND channel_id IS NOT NULL)", name='check_scope_channel_consistency'),
    sa.ForeignKeyConstraint(['channel_id'], ['channels.id'], ),
    sa.ForeignKeyConstraint(['issued_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['revoked_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['target_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_channel_roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('channel_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=50), server_default='Basic', nullable=False),
    sa.Column('granted_at', sa.DateTime(), server_default='now()', nullable=False),
    sa.Column('granted_by', sa.Integer(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('active', sa.Boolean(), server_default='true', nullable=False),
    sa.ForeignKeyConstraint(['channel_id'], ['channels.id'], ),
    sa.ForeignKeyConstraint(['granted_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'channel_id', name='uq_user_channel')
    )
    op.add_column('users', sa.Column('globally_banned', sa.Boolean(), server_default='false', nullable=False))
    op.add_column('users', sa.Column('global_ban_reason', sa.Text(), nullable=True))
    op.add_column('users', sa.Column('global_ban_expires_at', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'global_ban_expires_at')
    op.drop_column('users', 'global_ban_reason')
    op.drop_column('users', 'globally_banned')
    op.drop_table('user_channel_roles')
    op.drop_table('moderation_actions')
    # ### end Alembic commands ###
