"""init 2.0

Revision ID: b9b02a5999ce
Revises: 
Create Date: 2025-04-07 00:38:37.966661

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_file
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "b9b02a5999ce"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "broadcaster",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=250), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "platforms",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=250), nullable=False),
        sa.Column("url", sa.String(length=1000), nullable=False),
        sa.Column("logo_url", sa.String(length=1000), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
        sa.UniqueConstraint("url"),
    )
    op.create_table(
        "channels",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=250), nullable=False),
        sa.Column("broadcaster_id", sa.Integer(), nullable=False),
        sa.Column("platform_id", sa.Integer(), nullable=False),
        sa.Column("platform_ref", sa.String(), nullable=False),
        sa.Column(
            "main_video_type",
            sa.Enum("Unknown", "VOD", "Clip", "Edit", name="videotype"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["broadcaster_id"],
            ["broadcaster.id"],
        ),
        sa.ForeignKeyConstraint(
            ["platform_id"],
            ["platforms.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("platform_ref"),
    )
    op.create_table(
        "video",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=250), nullable=False),
        sa.Column(
            "video_type",
            sa.Enum("Unknown", "VOD", "Clip", "Edit", name="videotype"),
            nullable=False,
        ),
        sa.Column("duration", sa.Float(), nullable=False),
        sa.Column("channel_id", sa.Integer(), nullable=False),
        sa.Column("last_updated", sa.DateTime(), nullable=False),
        sa.Column("platform_ref", sa.String(), nullable=False),
        sa.Column("thumbnail", sqlalchemy_file.types.FileField(), nullable=True),
        sa.Column("audio", sqlalchemy_file.types.FileField(), nullable=True),
        sa.ForeignKeyConstraint(
            ["channel_id"],
            ["channels.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("platform_ref"),
    )
    op.create_index(op.f("ix_video_channel_id"), "video", ["channel_id"], unique=False)
    op.create_table(
        "transcriptions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("video_id", sa.Integer(), nullable=False),
        sa.Column("language", sa.String(length=250), nullable=False),
        sa.Column("last_updated", sa.DateTime(), nullable=False),
        sa.Column("file_extention", sa.String(length=10), nullable=False),
        sa.Column("file", sqlalchemy_file.types.FileField(), nullable=False),
        sa.Column(
            "source",
            sa.Enum("Unknown", "YouTube", name="transcriptionsource"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["video_id"],
            ["video.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_transcriptions_video_id"), "transcriptions", ["video_id"], unique=False
    )
    op.create_table(
        "segments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("text", sa.String(length=500), nullable=False),
        sa.Column("start", sa.Integer(), nullable=False),
        sa.Column("end", sa.Integer(), nullable=False),
        sa.Column("transcription_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["transcription_id"],
            ["transcriptions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_segments_transcription_id"),
        "segments",
        ["transcription_id"],
        unique=False,
    )
    op.create_table(
        "wordmaps",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("word", sa.String(length=50), nullable=False),
        sa.Column("segments", postgresql.ARRAY(sa.Integer()), nullable=False),
        sa.Column("transcription_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["transcription_id"],
            ["transcriptions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_wordmaps_transcription_id"),
        "wordmaps",
        ["transcription_id"],
        unique=False,
    )
    op.create_index(op.f("ix_wordmaps_word"), "wordmaps", ["word"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_wordmaps_word"), table_name="wordmaps")
    op.drop_index(op.f("ix_wordmaps_transcription_id"), table_name="wordmaps")
    op.drop_table("wordmaps")
    op.drop_index(op.f("ix_segments_transcription_id"), table_name="segments")
    op.drop_table("segments")
    op.drop_index(op.f("ix_transcriptions_video_id"), table_name="transcriptions")
    op.drop_table("transcriptions")
    op.drop_index(op.f("ix_video_channel_id"), table_name="video")
    op.drop_table("video")
    op.drop_table("channels")
    op.drop_table("platforms")
    op.drop_table("broadcaster")
    # ### end Alembic commands ###
