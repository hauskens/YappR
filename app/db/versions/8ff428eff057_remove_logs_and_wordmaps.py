"""remove logs and wordmaps

Revision ID: 8ff428eff057
Revises: 19b7bf30c76b
Create Date: 2025-05-21 17:28:45.272847

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_file
import sqlalchemy_utils
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8ff428eff057'
down_revision: Union[str, None] = '19b7bf30c76b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('logs')
    op.drop_index('ix_wordmaps_transcription_id', table_name='wordmaps')
    op.drop_index('ix_wordmaps_word', table_name='wordmaps')
    op.drop_table('wordmaps')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('wordmaps',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('word', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('segments', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=False),
    sa.Column('transcription_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['transcription_id'], ['transcriptions.id'], name='wordmaps_transcription_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='wordmaps_pkey')
    )
    op.create_index('ix_wordmaps_word', 'wordmaps', ['word'], unique=False)
    op.create_index('ix_wordmaps_transcription_id', 'wordmaps', ['transcription_id'], unique=False)
    op.create_table('logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('text', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='logs_pkey')
    )
    # ### end Alembic commands ###
