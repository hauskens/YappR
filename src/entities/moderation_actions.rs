//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "moderation_actions")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub target_user_id: i32,
    pub action_type: String,
    pub scope: String,
    pub channel_id: Option<i32>,
    #[sea_orm(column_type = "Text")]
    pub reason: String,
    pub duration_seconds: Option<i32>,
    pub expires_at: Option<DateTime>,
    pub issued_by: i32,
    pub issued_at: DateTime,
    pub active: bool,
    pub revoked_at: Option<DateTime>,
    pub revoked_by: Option<i32>,
    #[sea_orm(column_type = "Text", nullable)]
    pub revoked_reason: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::channels::Entity",
        from = "Column::ChannelId",
        to = "super::channels::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Channels,
    #[sea_orm(
        belongs_to = "super::users::Entity",
        from = "Column::IssuedBy",
        to = "super::users::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Users3,
    #[sea_orm(
        belongs_to = "super::users::Entity",
        from = "Column::RevokedBy",
        to = "super::users::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Users2,
    #[sea_orm(
        belongs_to = "super::users::Entity",
        from = "Column::TargetUserId",
        to = "super::users::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Users1,
}

impl Related<super::channels::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Channels.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
