//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "timestamp_mapping")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub source_video_id: i32,
    pub target_video_id: i32,
    #[sea_orm(column_type = "Double")]
    pub source_start_time: f64,
    #[sea_orm(column_type = "Double")]
    pub source_end_time: f64,
    #[sea_orm(column_type = "Double")]
    pub target_start_time: f64,
    #[sea_orm(column_type = "Double")]
    pub target_end_time: f64,
    #[sea_orm(column_type = "Double")]
    pub time_offset: f64,
    pub cuts_data: Option<Json>,
    pub active: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::video::Entity",
        from = "Column::SourceVideoId",
        to = "super::video::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Video2,
    #[sea_orm(
        belongs_to = "super::video::Entity",
        from = "Column::TargetVideoId",
        to = "super::video::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Video1,
}

impl ActiveModelBehavior for ActiveModel {}
